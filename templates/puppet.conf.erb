<%= ERB.new(File.read(File.expand_path("_header.erb",File.dirname(file)))).result(binding) -%>

[main]
    # The Puppet log directory.
    # The default value is '$vardir/log'.
    logdir = /var/log/puppet

    # Where Puppet PID files are kept.
    # The default value is '$vardir/run'.
    rundir = /var/run/puppet

    # Where SSL certificates are kept.
    # The default value is '$confdir/ssl'.
    ssldir = $vardir/ssl

    # Allow services in the 'puppet' group to access key (Foreman + proxy)
    privatekeydir = $ssldir/private_keys { group = service }
    hostprivkey = $privatekeydir/$certname.pem { mode = 640 }

    # Puppet 3.0.x requires this in both [main] and [master] - harmless on agents
    autosign       = $confdir/autosign.conf { mode = 664 }

<% if @ca_server -%>
    # Use specified CA server
    ca_server = <%= @ca_server %>
<% end -%>

[agent]
    # The file in which puppetd stores a list of the classes
    # associated with the retrieved configuratiion.  Can be loaded in
    # the separate ``puppet`` executable using the ``--loadclasses``
    # option.
    # The default value is '$statedir/classes.txt'.
    classfile = <%= scope.lookupvar('::puppet::classfile') %>

    # Where puppetd caches the local configuration.  An
    # extension indicating the cache format is added automatically.
    # The default value is '$confdir/localconfig'.
    localconfig = $vardir/localconfig

    # Disable the default schedules as they cause continual skipped
    # resources to be displayed in Foreman - only for Puppet >= 3.4
    default_schedules = false

    report        = true
    pluginsync    = <%= scope.lookupvar('::puppet::pluginsync') %>
    masterport    = <%= scope.lookupvar("::puppet::port") rescue 8140 %>
    environment   = <%= @environment %>
    certname      = <%= @clientcert %>
    server        = <%= if ( @puppetmaster and !@puppetmaster.empty? ) then @puppetmaster else @fqdn end %>
    listen        = <%= scope.lookupvar('::puppet::listen') %>
    splay         = <%= scope.lookupvar('::puppet::splay') %>
    runinterval   = <%= scope.lookupvar('::puppet::runinterval') %>
    noop          = <%= scope.lookupvar('::puppet::agent_noop') %>
    show_diff     = <%= scope.lookupvar('::puppet::show_diff') %>
    configtimeout = <%= scope.lookupvar('::puppet::configtimeout') %>
